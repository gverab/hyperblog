Curso git
Comandos git:
1. git status : muestra el status de los cambios
2. git add (nombre archivo) : agrega archivos a staying (si uso un . en lugar del nombre de archivo, agrego todos los archivos a staying).
3. git commit -m "Mensaje" : agrega archivos que estaban en staying, al repositorio.
4. git config : muestra los comandos disponibles y variables configurables.
5. git config --global user.name "Nombre" : Configura el nombre de usuario de git
6. git config --global user.email "Nombre" : Configura el correo de usuario de git
7. git show "nombre de archivo" : muestra los cambios efectuados entre los ultimos commits 
8. git log: Muestra todos los commits hechos a un archivo, y los respectivos IDs de esos commits (sirven para el comando git diff).
9. git diff ID_commitA ID_commitB : muestra las diferencias en el archivo entre los dos commits indicados. Idealmente usar el commit más antiguo como ID_commitA. notar que si
algun commit incluye varios archivos, la comparación entre commits, incluye a todos los archivos modificados.
10. git reset ID_commit --hard : vuelve el repositorio al estado del commit indicado (todos los archivos vuelven a ese estado y los cambios hechos a partir de ese commit desaparecen). Notar
que al hacer log, ningun commit posterior al que indicamos aparece, es decir, volvimos en el tiempo y es como si ningun cambio hubiese sido realizado y ningun commit hecho.
11. git reset ID_commit --soft : vuelve el repositorio al estado del commit indicado (todos los archivos vuelven a ese estado y los cambios hechos a partir de ese commit desaparecen, pero
lo que haya quedado en staying cuando se hizo git add permanece disponible).
12. git log --stat : permite ver todos los cambios ejecutados para cada commit y diferenciados por archivos (moverse con flechas y salir con q).
13. git checkout ID_commit (nombre archivo): Permite mover la "cabecera" de la rama master hacia un punto en la historia deseado (ID_commit). El ID_commit puede ser reemplazado por la
palabra "master", y con eso vuelvo la cabecera al momento original antes del checkout al "pasado", es decir la versión actual.
14. git init: inicia un repositorio en la carpeta en la que nos encontremos al ejecutar el comando.
15. git config --list : muestra la configuración por defecto actual.
16. git rm --cached (nombre de archivo) : elimina el archivo de staying y lo vuelve Untracked (sirve para cuando uno se equivoca y agrega cambios que no quiere, con el add, 
y aun no hace commit).
NOTA: la diferencia entre git rm --cached (nombre archivo) y git reset HEAD es que: en el primer comando se quita el archivo de Satying pero también lo deja untracked, en cambio
git reset MASTER (---soft o --hard) los quita del Staying area pero con todo el tracking que tenía. 


Comandos terminal:
1. pwd : Indica carpeta actual.
2. ls : Lista los archivos y carpetas
3. clear : limpia la terminal.
4. cd : cambiar entre directorios.
5. mkdir : crea un directorio.